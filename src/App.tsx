import React, { useEffect, useState } from 'react';
import logo from './logo.svg';
import './App.css';

import items from "./json/items.json";

interface IItem {
  id: string;
  name: string;
  amount: number,
  modifier: string;
}

interface IUser {
  rawInventory: string;
  parsedItens?: IItem[];
}

let userData: IUser = {
  rawInventory: "482,1,59~778,1,44~217,1,0~3030,1,60~2551,1,34~3051,1,83~1244,1,0~4760,1,60~3066,129,0~50,1,0~75,245,0~3029,1,59~676,1,37~0,0,0~0,0,0~890,1,70~901,1,0~902,1,70~903,1,79~888,1,74~273,1,81~1123,1,0~65,1,0~0,0,0~0,0,0~2215,1,0~188,29,0~188,8,0~499,2,0~500,17,0~3213,1,0~3,877,0~0,0,0~528,1,0~520,7,0~521,3,0~3118,1,0~3084,1,0~395,1,65~3121,1,71~2296,1,0~5095,1,55~2997,30,0~2997,22,0~2322,10,0~296,8,0~892,1,73~8,648,0~3611,1,0~1923,1,0~0,0,0~71,58,0~73,3,0~72,9,0~0,0,0~41,29,0~51,30,0~47,31,0~0,0,0~401,1,0~403,1,0~404,1,0~3097,1,63~397,1,70~1253,1,74~1862,1,0~860,1,64~3224,1,65~862,1,65~870,1,0~871,1,0~872,1,0~0,0,0~976,1,80~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~5098,1,0~3043,1,0~0,0,0~4795,1,0~1915,1,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~1309,1,33~5114,1,28~73,1,0~0,0,0~0,0,0~367,1,46~88,1,0~854,1,73~3033,1,68~526,1,0~1921,1,0~4737,1,0~29,4,0~530,339,0~1537,1,0~1536,1,0~1533,1,0~4821,1,0~4325,1,0~3191,7,0~2675,2,0~4338,1,0~3193,2,0~3192,4,0~2674,2,0~329,1,0~148,8,0~5010,1,65~396,1,68~0,0,0~879,1,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~366,292,0~382,4,0~365,89,0~1184,134,0~1104,225,0~175,10,0~174,147,0~86,170,0~57,94,0~56,384,0~706,18,0~702,236,0~19,4,0~13,54,0~705,18,0~701,111,0~14,53,0~704,5,0~700,136,0~22,2,0~11,64,0~703,15,0~699,53,0~20,50,0~12,469,0~177,5,0~181,13,0~4855,3,0~4853,1,0~173,90,0~391,10,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~5,1,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0~0,0,0",
};

function App() {
  const [user, setUser] = useState(userData);

  useEffect(() => {
    const parsedItens = user.rawInventory.split("~").map(i => {
      const [id, amount, modifier] = i.split(",")
      const name = getItemName(id);
      return { id, name, amount: Number(amount), modifier };
    });
    setUser({ ...user, parsedItens })
    console.log(user.parsedItens);
  }, [items]);

  const getItemName = (id: string) => {
    return items.find((i) => i.id === id)?.name || "undefined";
  };

  return (
    <div>
      Itens:
      {user.parsedItens?.map((item) => {
        // if (item.name && item.amount > 0) {
          const isUnknown = item.name === "undefined";
          const isEmpty = isUnknown && item.amount > 0;
          return (
            <div key={item.id} className={`${isUnknown ? "unknown" : ""} ${isEmpty ? "empty" : ""}`}>
              {item.name} x {item.amount}
            </div>)
        // }
      })}
    </div>
  );
}

export default App;
